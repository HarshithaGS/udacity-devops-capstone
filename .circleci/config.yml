version: 2.1

orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

jobs:
  lint-app:
    docker:
      - image: python:3.7.3-stretch
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
            
  build-docker-image:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Docker Image
          command: |
            docker build --tag=capstone .
      - run:
          name: List Docker Image
          command: |
            docker image ls
      - run:
          name: Push Docker image into Docker Hub
          command: |
            docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
            dockerpath=harshitha95/capstone
            docker tag capstone  $dockerpath
            docker push $dockerpath
  
  #  used https://circleci.com/developer/orbs/orb/circleci/aws-eks#usage-create-k8s-deployment as sample
  create-deployment:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run: 
          name: Install kubectl
          command: |
            yum install -y wget
            wget -O kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl

      - run:
          name: Deploy cluster and update image
          command: |
            kubectl apply -f deployment.yml 
            kubectl get svc
            kubectl get pods
      - run:
          name: Connect cluster
          command: |
            aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name capstone-cluster 
            kubectl get svc
      - run:
          name: rollout deployment 
          command: |
            kubectl rollout status deployment.apps/deployment
            kubectl get all

workflows:
  default:
    jobs:
       - lint-app
       - build-docker-image:
            requires: 
              - lint-app
       - create-deployment:
            requires:
              - build-docker-image