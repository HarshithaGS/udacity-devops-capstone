version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.0
  kubernetes: circleci/kubernetes@0.11.1

  
jobs:
  build:
    docker:
      # Use the same Docker base as the project
      - image: python:3.7.3-stretch
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies- #fallback to using the latest cache if no exact match is found
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&
            chmod +x /bin/hadolint
      # run lint!
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint 
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

  create_and_publish_image:
    machine: true
    steps:
      - checkout
      - run:
          name: build docker container
          no_output_timeout: 1m
          command: |
            ./run_docker.sh
      - run:
          name: upload docker container
          no_output_timeout: 3m
          command: |
            ./upload_docker.sh ${DOCKER_USERNAME} ${DOCKER_PASSWORD}
            
  Infrastructure_and_Deployment:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      - run: 
          name: Install kubectl
          command: |
            yum install -y wget
            wget -O kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Connect cluster
          command: |
            aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name capstone
            kubectl get svc
      - run:
          name: Deploy cluster and update image
          command: |
            kubectl apply -f cluster_def.yml 
            kubectl get svc
            kubectl get pods
      - run:
          name: rollout deployment 
          command: |
            kubectl rollout status deployment.apps/cluster_def.yml
            kubectl get all
            
workflows:
  cicd-pipeline:
    jobs:
      - build
      - create_and_publish_image:
          requires:
            - build
      - Infrastructure_and_Deployment:
          requires:
            - create_and_publish_image